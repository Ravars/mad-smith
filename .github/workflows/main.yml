name: GameCI Template 🎮

on: 
  push:
    branches:
      - main

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  ITCH_USERNAME: ${{secrets.ITCH_USERNAME}}
  ITCH_GAME_ID: ${{secrets.ITCH_GAME_ID}}

jobs:
#  testRunner:
#    name: Test in ${{ matrix.testMode }} ✨
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        testMode:
#          - EditMode
#          - PlayMode
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Create LFS file list
#        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
#      - name: Restore LFS cache
#        uses: actions/cache@v2
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
#      - name: Git LFS Pull
#        run: |
#          git lfs pull
#          git add .
#          git reset --hard
#
#      - name: Restore Library cache
#        uses: actions/cache@v2
#        with:
#          path: Library
#          key: Library-test-project-${{ matrix.targetPlatform }}
#          restore-keys: |
#            Library-test-project-
#            Library-
#
#      - name: Run tests
#        uses: game-ci/unity-test-runner@v2
#        id: testRunner
#        with:
#          testMode: ${{ matrix.testMode }}
#          checkName: ${{ matrix.testMode }} test results
#          githubToken: ${{ secrets.GITHUB_TOKEN }}
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: Test results (${{ matrix.testMode }})
#          path: ${{ steps.testRunner.outputs.artifactsPath }}

  # buildWebGL:
  #   needs: testRunner
  #   name: Build for WebGL 🖥️
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Create LFS file list
  #       run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

  #     - name: Restore LFS cache
  #       uses: actions/cache@v2
  #       id: lfs-cache
  #       with:
  #         path: .git/lfs
  #         key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

  #     - name: Git LFS Pull
  #       run: |
  #         git lfs pull
  #         git add .
  #         git reset --hard

  #     - name: Restore Library cache
  #       uses: actions/cache@v2
  #       with:
  #         path: Library
  #         key: Library-build-WebGL
  #         restore-keys: |
  #           Library-build-
  #           Library-

  #     - uses: game-ci/unity-builder@v2
  #       with:
  #         targetPlatform: WebGL

  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: build-WebGL
  #         path: build/WebGL

  buildWindows:
#    needs: testRunner
    name: Build for Windows 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-build-StandaloneWindows64
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v4
        with:
          targetPlatform: StandaloneWindows64

      - uses: actions/upload-artifact@v3
        with:
          name: build-StandaloneWindows64
          path: build/StandaloneWindows64

  # buildAndroid:
  #   needs: testRunner
  #   name: Build for Android 📱
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Create LFS file list
  #       run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

  #     - name: Restore LFS cache
  #       uses: actions/cache@v2
  #       id: lfs-cache
  #       with:
  #         path: .git/lfs
  #         key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

  #     - name: Git LFS Pull
  #       run: |
  #         git lfs pull
  #         git add .
  #         git reset --hard

  #     - name: Restore Library cache
  #       uses: actions/cache@v2
  #       with:
  #         path: Library
  #         key: Library-build-Android
  #         restore-keys: |
  #           Library-build-
  #           Library-

  #     - uses: game-ci/unity-builder@v2
  #       with:
  #         targetPlatform: Android

  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: build-Android
  #         path: build/Android


  # deployPages:
  #   needs: buildWebGL
  #   name: Deploy to Github Pages 🚀
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: build-WebGL
  #         path: build

  #     - name: Deploy 🚀
  #       uses: JamesIves/github-pages-deploy-action@4.1.4
  #       with:
  #         branch: gh-pages
  #         folder: build/WebGL
  #deploy:
  #  needs: buildWindows
  #  name: Upload to Itch
  #  runs-on: ubuntu-latest
  #  strategy:
  #    fail-fast: true
  #    matrix:
  #      channel:
  #        - windows
  #  steps:
  #    - uses: actions/download-artifact@v2.0.8
  #      with:
  #        name: build-StandaloneWindows64
  #        path: build/StandaloneWindows64
  #    - uses: KikimoraGames/itch-publish@v0.0.3
  #      with:
  #        butlerApiKey: ${{secrets.BUTLER_API_KEY}}
  #        gameData: ./build/StandaloneWindows64
  #        itchUsername: ${{env.ITCH_USERNAME}}
  #        itchGameId: ${{env.ITCH_GAME_ID}}
  #        buildChannel: ${{ matrix.channel }}
